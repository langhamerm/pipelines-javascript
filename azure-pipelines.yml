trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '{{ azureRmConnection.Id }}'

  # Web app name
  webAppName: '{{ webAppName }}'
  
  # Environment name
  environmentName: '{{ webAppName }}'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
- task: gulp@1
  inputs:
    targets: 
    arguments: 'boo'
    workingDirectory: '/'
    enableCodeCoverage: false

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   condition: succeeded()
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     environment: $(environmentName)
#     pool: 
#       vmImage: $(vmImageName)
#     strategy:
#       runOnce:
#         deploy:
#           steps:            
#           - task: AzureRmWebAppDeployment@4
#             displayName: 'Azure App Service Deploy: {{ webAppName }}'
#             inputs:
#               azureSubscription: $(azureSubscription)
#               appType: webAppLinux
#               WebAppName: $(webAppName)
#               packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
#               RuntimeStack: 'NODE|10.10'
#               StartupCommand: 'npm run start'
#               ScriptType: 'Inline Script'
#               InlineScript: |
#                 npm install
#                 npm run build --if-present